version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: news-map-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: news_map_db
      POSTGRES_USER: news_map_user
      POSTGRES_PASSWORD: news_map_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/migrations:/docker-entrypoint-initdb.d/migrations:ro
      - ./packages/backend/seeds:/docker-entrypoint-initdb.d/seeds:ro
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    networks:
      - news-map-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U news_map_user -d news_map_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: news-map-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - news-map-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend API
  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    container_name: news-map-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://news_map_user:news_map_password@postgres:5432/news_map_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-key-change-in-production
      NEWS_API_KEY: your-news-api-key
      GUARDIAN_API_KEY: your-guardian-api-key
      GEOCODING_API_KEY: your-geocoding-api-key
      LOG_LEVEL: debug
      # LLM Provider Configuration
      BIAS_ANALYSIS_PROVIDER: openai
      BIAS_ANALYSIS_FALLBACK_PROVIDERS: openai,ollama
      OPENAI_API_KEY: your-openai-api-key
      OPENAI_MODEL: gpt-3.5-turbo
      GROK_API_KEY: your-grok-api-key
      GROK_MODEL: grok-beta
      OLLAMA_BASE_URL: http://ollama:11434
      OLLAMA_MODEL: llama2:7b
      LLM_HEALTH_CHECK_INTERVAL: 300000
      LLM_ENABLE_FAILOVER: true
    ports:
      - "3001:3001"
    volumes:
      - ./packages/backend:/app/packages/backend
      - ./packages/shared:/app/packages/shared
      - /app/packages/backend/node_modules
      - /app/packages/shared/node_modules
      - backend_logs:/app/packages/backend/logs
    networks:
      - news-map-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: sh -c "npm run validate-config && npm run dev"

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
    container_name: news-map-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_SOCKET_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./packages/frontend:/app/packages/frontend
      - ./packages/shared:/app/packages/shared
      - /app/packages/frontend/node_modules
      - /app/packages/shared/node_modules
    networks:
      - news-map-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: npm run dev

  # Ollama Local LLM (Optional)
  ollama:
    image: ollama/ollama:latest
    container_name: news-map-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - news-map-network
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    profiles:
      - ollama  # Use profile to make this service optional

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: news-map-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-proxy-params:/etc/nginx/proxy_params:ro
      - nginx_logs:/var/log/nginx
    networks:
      - news-map-network
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  news-map-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  backend_logs:
  nginx_logs:
  ollama_data: