version: '3.8'

# Standalone Docker Compose for Interactive World News Map
# This file allows deployment without cloning the repository
# Usage: curl -O https://raw.githubusercontent.com/kingkhan92/interactive-world-news-map/main/docker-compose.standalone.yml && docker-compose -f docker-compose.standalone.yml up -d

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: news-map-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-news_map_db}
      POSTGRES_USER: ${POSTGRES_USER:-news_map_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_this_password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Initialize database with schema from GitHub
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    networks:
      - news-map-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-news_map_user} -d ${POSTGRES_DB:-news_map_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: news-map-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-change_this_password} --appendonly yes --appendfsync everysec
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - news-map-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-change_this_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true

  # Backend API (Pre-built image from GitHub Container Registry)
  backend:
    image: ghcr.io/kingkhan92/interactive-world-news-map-backend:latest
    container_name: news-map-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${POSTGRES_USER:-news_map_user}:${POSTGRES_PASSWORD:-change_this_password}@postgres:5432/${POSTGRES_DB:-news_map_db}
      REDIS_URL: redis://:${REDIS_PASSWORD:-change_this_password}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-change-this-to-a-very-secure-secret-at-least-32-characters}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      NEWS_API_KEY: ${NEWS_API_KEY}
      GUARDIAN_API_KEY: ${GUARDIAN_API_KEY}
      GEOCODING_API_KEY: ${GEOCODING_API_KEY}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      # LLM Provider Configuration
      BIAS_ANALYSIS_PROVIDER: ${BIAS_ANALYSIS_PROVIDER:-openai}
      BIAS_ANALYSIS_FALLBACK_PROVIDERS: ${BIAS_ANALYSIS_FALLBACK_PROVIDERS:-openai,ollama}
      # OpenAI Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-3.5-turbo}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-https://api.openai.com/v1}
      OPENAI_TIMEOUT: ${OPENAI_TIMEOUT:-30000}
      OPENAI_MAX_RETRIES: ${OPENAI_MAX_RETRIES:-3}
      OPENAI_RATE_LIMIT: ${OPENAI_RATE_LIMIT:-60}
      # Grok Configuration
      GROK_API_KEY: ${GROK_API_KEY}
      GROK_MODEL: ${GROK_MODEL:-grok-beta}
      GROK_BASE_URL: ${GROK_BASE_URL:-https://api.x.ai/v1}
      GROK_TIMEOUT: ${GROK_TIMEOUT:-30000}
      GROK_MAX_RETRIES: ${GROK_MAX_RETRIES:-3}
      GROK_RATE_LIMIT: ${GROK_RATE_LIMIT:-60}
      # Ollama Configuration
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL:-http://ollama:11434}
      OLLAMA_MODEL: ${OLLAMA_MODEL:-llama2:7b}
      OLLAMA_TIMEOUT: ${OLLAMA_TIMEOUT:-60000}
      OLLAMA_MAX_RETRIES: ${OLLAMA_MAX_RETRIES:-2}
      OLLAMA_RATE_LIMIT: ${OLLAMA_RATE_LIMIT:-30}
      # LLM Health Check Configuration
      LLM_HEALTH_CHECK_INTERVAL: ${LLM_HEALTH_CHECK_INTERVAL:-300000}
      LLM_ENABLE_FAILOVER: ${LLM_ENABLE_FAILOVER:-true}
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    volumes:
      - backend_logs:/app/logs
    networks:
      - news-map-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Frontend React App (Pre-built image from GitHub Container Registry)
  frontend:
    image: ghcr.io/kingkhan92/interactive-world-news-map-frontend:latest
    container_name: news-map-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001}
      VITE_SOCKET_URL: ${VITE_SOCKET_URL:-http://localhost:3001}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    networks:
      - news-map-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Ollama Local LLM (Optional)
  ollama:
    image: ollama/ollama:latest
    container_name: news-map-ollama
    restart: unless-stopped
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - news-map-network
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    profiles:
      - ollama  # Use profile to make this service optional

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: news-map-nginx
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
      - nginx_logs:/var/log/nginx
    networks:
      - news-map-network
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

networks:
  news-map-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local
  nginx_cache:
    driver: local
  nginx_logs:
    driver: local
  ollama_data:
    driver: local